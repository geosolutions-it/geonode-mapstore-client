(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[19250],{798090:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>m});var r=i(613002),o=i(173381),n=i(421915),s=i(208204),h=i(28795),p=i(913580);function a(e){for(var t=[],i=0,r=e.length;i<r;++i)t.push(e[i].clone());return t}const m=function(e){function t(t){e.call(this),this.geometries_=t||null,this.listenGeometriesChange_()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.unlistenGeometriesChange_=function(){if(this.geometries_)for(var e=0,t=this.geometries_.length;e<t;++e)(0,r.Ev)(this.geometries_[e],o.Z.CHANGE,this.changed,this)},t.prototype.listenGeometriesChange_=function(){if(this.geometries_)for(var e=0,t=this.geometries_.length;e<t;++e)(0,r.oL)(this.geometries_[e],o.Z.CHANGE,this.changed,this)},t.prototype.clone=function(){var e=new t(null);return e.setGeometries(this.geometries_),e},t.prototype.closestPointXY=function(e,t,i,r){if(r<(0,n.qf)(this.getExtent(),e,t))return r;for(var o=this.geometries_,s=0,h=o.length;s<h;++s)r=o[s].closestPointXY(e,t,i,r);return r},t.prototype.containsXY=function(e,t){for(var i=this.geometries_,r=0,o=i.length;r<o;++r)if(i[r].containsXY(e,t))return!0;return!1},t.prototype.computeExtent=function(e){(0,n.YN)(e);for(var t=this.geometries_,i=0,r=t.length;i<r;++i)(0,n.l7)(e,t[i].getExtent());return e},t.prototype.getGeometries=function(){return a(this.geometries_)},t.prototype.getGeometriesArray=function(){return this.geometries_},t.prototype.getSimplifiedGeometry=function(e){if(this.simplifiedGeometryRevision!=this.getRevision()&&((0,p.ZH)(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),e<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&e<this.simplifiedGeometryMaxMinSquaredTolerance)return this;var i=e.toString();if(this.simplifiedGeometryCache.hasOwnProperty(i))return this.simplifiedGeometryCache[i];for(var r=[],o=this.geometries_,n=!1,s=0,h=o.length;s<h;++s){var a=o[s],m=a.getSimplifiedGeometry(e);r.push(m),m!==a&&(n=!0)}if(n){var l=new t(null);return l.setGeometriesArray(r),this.simplifiedGeometryCache[i]=l,l}return this.simplifiedGeometryMaxMinSquaredTolerance=e,this},t.prototype.getType=function(){return h.Z.GEOMETRY_COLLECTION},t.prototype.intersectsExtent=function(e){for(var t=this.geometries_,i=0,r=t.length;i<r;++i)if(t[i].intersectsExtent(e))return!0;return!1},t.prototype.isEmpty=function(){return 0===this.geometries_.length},t.prototype.rotate=function(e,t){for(var i=this.geometries_,r=0,o=i.length;r<o;++r)i[r].rotate(e,t);this.changed()},t.prototype.scale=function(e,t,i){var r=i;r||(r=(0,n.qg)(this.getExtent()));for(var o=this.geometries_,s=0,h=o.length;s<h;++s)o[s].scale(e,t,r);this.changed()},t.prototype.setGeometries=function(e){this.setGeometriesArray(a(e))},t.prototype.setGeometriesArray=function(e){this.unlistenGeometriesChange_(),this.geometries_=e,this.listenGeometriesChange_(),this.changed()},t.prototype.applyTransform=function(e){for(var t=this.geometries_,i=0,r=t.length;i<r;++i)t[i].applyTransform(e);this.changed()},t.prototype.translate=function(e,t){for(var i=this.geometries_,r=0,o=i.length;r<o;++r)i[r].translate(e,t);this.changed()},t.prototype.disposeInternal=function(){this.unlistenGeometriesChange_(),e.prototype.disposeInternal.call(this)},t}(s.Z)},819081:(e,t,i)=>{"use strict";e.exports=i(1174)}}]);